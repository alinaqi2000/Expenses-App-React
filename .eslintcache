[{"E:\\work\\react\\expenses\\src\\index.tsx":"1","E:\\work\\react\\expenses\\src\\reportWebVitals.ts":"2","E:\\work\\react\\expenses\\src\\App.tsx":"3","E:\\work\\react\\expenses\\src\\context\\ItemContext.tsx":"4","E:\\work\\react\\expenses\\src\\context\\ItemProvider.tsx":"5","E:\\work\\react\\expenses\\src\\models\\Item.tsx":"6","E:\\work\\react\\expenses\\src\\components\\Layout.tsx":"7","E:\\work\\react\\expenses\\src\\components\\items\\ItemsMain.tsx":"8","E:\\work\\react\\expenses\\src\\components\\auth\\Register.tsx":"9","E:\\work\\react\\expenses\\src\\components\\auth\\Login.tsx":"10","E:\\work\\react\\expenses\\src\\components\\items\\ItemsList.tsx":"11","E:\\work\\react\\expenses\\src\\components\\items\\AddItemDialog.tsx":"12","E:\\work\\react\\expenses\\src\\models\\User.tsx":"13","E:\\work\\react\\expenses\\src\\components\\items\\Item.tsx":"14","E:\\work\\react\\expenses\\src\\models\\Chart.tsx":"15","E:\\work\\react\\expenses\\src\\components\\items\\ItemsChart.tsx":"16","E:\\work\\react\\expenses\\src\\components\\profile\\EditProfile.tsx":"17"},{"size":452,"mtime":1611610613065,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1569,"mtime":1612084276912,"results":"21","hashOfConfig":"19"},{"size":1593,"mtime":1612079872671,"results":"22","hashOfConfig":"19"},{"size":5161,"mtime":1613969532974,"results":"23","hashOfConfig":"19"},{"size":211,"mtime":1613923387128,"results":"24","hashOfConfig":"19"},{"size":5097,"mtime":1613929156399,"results":"25","hashOfConfig":"19"},{"size":984,"mtime":1612091290923,"results":"26","hashOfConfig":"19"},{"size":6659,"mtime":1613916584060,"results":"27","hashOfConfig":"19"},{"size":5499,"mtime":1613916584060,"results":"28","hashOfConfig":"19"},{"size":4858,"mtime":1613916584175,"results":"29","hashOfConfig":"19"},{"size":6711,"mtime":1613925110875,"results":"30","hashOfConfig":"19"},{"size":495,"mtime":1613915044927,"results":"31","hashOfConfig":"19"},{"size":2293,"mtime":1613925255059,"results":"32","hashOfConfig":"19"},{"size":93,"mtime":1612013557835,"results":"33","hashOfConfig":"19"},{"size":1456,"mtime":1613928657080,"results":"34","hashOfConfig":"19"},{"size":7244,"mtime":1613916584060,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"17d5rjs",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"E:\\work\\react\\expenses\\src\\index.tsx",[],["79","80"],"E:\\work\\react\\expenses\\src\\reportWebVitals.ts",[],"E:\\work\\react\\expenses\\src\\App.tsx",[],"E:\\work\\react\\expenses\\src\\context\\ItemContext.tsx",[],"E:\\work\\react\\expenses\\src\\context\\ItemProvider.tsx",["81"],"E:\\work\\react\\expenses\\src\\models\\Item.tsx",[],"E:\\work\\react\\expenses\\src\\components\\Layout.tsx",["82"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ItemContext, { ItemCtx } from '../context/ItemContext';\r\nimport { navigate } from \"@reach/router\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AccountBoxTwoToneIcon from '@material-ui/icons/AccountBoxTwoTone';\r\n\r\ninterface Props {\r\n    children: JSX.Element,\r\n}\r\n\r\nexport default function Layout(props: Props) {\r\n    const context: ItemCtx = useContext(ItemContext)\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n    useEffect(() => {\r\n        checkTheme()\r\n    }, [])\r\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const logOut = () => {\r\n        setAnchorEl(null);\r\n        context.setToken(\"\")\r\n        navigate(\"/login\")\r\n    }\r\n    const visitEdit = () => {\r\n        setAnchorEl(null);\r\n        navigate('/edit-profile')\r\n    }\r\n    const checkTheme = () => {\r\n        const theme: any = localStorage.getItem(\"appTheme\")\r\n        theme && context.setTheme(theme)\r\n    }\r\n    const theme = React.useMemo(\r\n        () =>\r\n            createMuiTheme({\r\n                palette: {\r\n                    type: context.theme,\r\n                }\r\n            }),\r\n        [context.theme],\r\n    );\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <AppBar position=\"static\">\r\n                <Toolbar style={{ justifyContent: \"space-between\" }}>\r\n                    <Typography onClick={()=>navigate('/')} variant=\"h6\">\r\n                        Expenses App\r\n                          </Typography>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={context.theme === \"dark\"}\r\n                                    onChange={() => context.setTheme(context.theme === \"light\" ? 'dark' : \"light\")}\r\n                                />\r\n                            }\r\n                            label=\"Dark Mode\"\r\n                        />\r\n                        {context.isAuth && (\r\n                            <React.Fragment>\r\n                                <IconButton\r\n                                    aria-label=\"account of current user\"\r\n                                    aria-controls=\"menu-appbar\"\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleMenu}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    <Avatar alt={context.user.name} src={context.user.image_url} />\r\n                                </IconButton>\r\n                                <Menu\r\n                                    id=\"menu-appbar\"\r\n                                    anchorEl={anchorEl}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    keepMounted\r\n                                    transformOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    open={open}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <MenuItem onClick={visitEdit}><AccountBoxTwoToneIcon /> Edit Profile</MenuItem>\r\n                                    <MenuItem onClick={logOut}><ExitToAppTwoToneIcon /> Logout</MenuItem>\r\n                                </Menu>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={context.theme === \"dark\" ? \"App darkMode\" : \"App\"}>\r\n\r\n                <Grid container style={{ justifyContent: \"center\" }} spacing={2}>\r\n                    <Grid item md={12} xs={12}>\r\n                        {props.children}\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </ThemeProvider>)\r\n}\r\n","E:\\work\\react\\expenses\\src\\components\\items\\ItemsMain.tsx",[],"E:\\work\\react\\expenses\\src\\components\\auth\\Register.tsx",["83","84"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link, navigate } from \"@reach/router\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { BASE_URL, ApiResponse } from '../../context/ItemProvider';\r\nimport { useSnackbar } from 'notistack';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport AssignmentTurnedInTwoToneIcon from '@material-ui/icons/AssignmentTurnedInTwoTone';\r\nimport ItemContext, { ItemCtx } from \"../../context/ItemContext\";\r\n\r\ninterface RegisterForm {\r\n    name: string\r\n    email: string\r\n    password: string\r\n    image_url: string\r\n}\r\ninterface Props {\r\n    path: string\r\n    classes: any\r\n}\r\nexport default function Register(props: Props) {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    const context: ItemCtx = useContext(ItemContext)\r\n\r\n    const [form, setForm] = useState<RegisterForm>({ name: \"\", email: \"\", password: \"\", image_url: \"\" })\r\n    const handleInputChange = (key: string, value: string) => {\r\n        setForm({ ...form, [key]: value })\r\n    }\r\n    useEffect(() => {\r\n        verifyUser()\r\n    }, [])\r\n    const verifyUser = async () => {\r\n        const token = localStorage.getItem(\"authToken\")\r\n        if (token) {\r\n            context.setToken(token)\r\n            const resp: AxiosResponse<ApiResponse> = await axios.get<ApiResponse>(`${BASE_URL}verify_user?token=${token}`);\r\n            if (resp.data.status) {\r\n                context.setUser(resp.data.success)\r\n                return navigate(\"/\")\r\n            }\r\n        }\r\n    }\r\n    const onSubmitForm = async () => {\r\n        if (!form.name)\r\n            return enqueueSnackbar(\"Please add a name.\", { variant: 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n        if (!form.email)\r\n            return enqueueSnackbar(\"Please add valid email address.\", { variant: 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n        if (!form.password)\r\n            return enqueueSnackbar(\"Please add a password.\", { variant: 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n        // if (!form.image_url)\r\n        // return enqueueSnackbar(\"Please add valid image url.\", { variant: 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n        const resp: AxiosResponse<ApiResponse> = await axios.post<ApiResponse>(`${BASE_URL}auth/register`, form);\r\n        enqueueSnackbar(resp.data.message, { variant: resp.data.status ? 'success' : 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n        return resp.data.status && navigate(\"/login\")\r\n    }\r\n    return (\r\n        <Grid container style={{ justifyContent: \"center\" }} spacing={2}>\r\n\r\n            <Grid item md={3} xs={12}>\r\n                <Card className={props.classes.root}>\r\n                    <CardContent className=\"auth-card\">\r\n                        <div className=\"CardTop\">\r\n                            <div className=\"titles\" style={{ justifyContent: \"center\" }}>\r\n                                <Typography gutterBottom variant=\"h5\">\r\n                                    Register\r\n                    </Typography>\r\n                            </div>\r\n                        </div>\r\n                        <form noValidate style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center'\r\n                        }}>\r\n                            <div style={{ margin: \"10px 0px\" }}>\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item>\r\n                                        <TextField onChange={(e) => handleInputChange(\"name\", e?.target.value)} label=\"Name\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item>\r\n                                        <TextField type=\"email\" onChange={(e) => handleInputChange(\"email\", e?.target.value)} label=\"Email Address\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item>\r\n                                        <TextField type=\"password\" onChange={(e) => handleInputChange(\"password\", e?.target.value)} label=\"Password\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item>\r\n                                        <TextField onChange={(e) => handleInputChange(\"image_url\", e?.target.value)} label=\"Profile Image Url\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Typography gutterBottom variant=\"body1\">\r\n                                        Already registered? <Link to=\"/login\">Login</Link>\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        startIcon={<AssignmentTurnedInTwoToneIcon />}\r\n                                        onClick={onSubmitForm}\r\n                                    >\r\n                                        Register\r\n                </Button>\r\n                                </Grid>\r\n                            </div>\r\n                        </form>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","E:\\work\\react\\expenses\\src\\components\\auth\\Login.tsx",["85","86"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link, navigate } from \"@reach/router\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { BASE_URL, ApiResponse } from '../../context/ItemProvider';\r\nimport { useSnackbar } from 'notistack';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport ItemContext, { ItemCtx } from \"../../context/ItemContext\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport LockOpenTwoToneIcon from '@material-ui/icons/LockOpenTwoTone';\r\n\r\ninterface LoginForm {\r\n    email: string\r\n    password: string\r\n}\r\n\r\ninterface Props {\r\n    path: string\r\n    classes: any\r\n}\r\nexport default function Login(props: Props) {\r\n    const context: ItemCtx = useContext(ItemContext)\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    const [form, setForm] = useState<LoginForm>({ email: \"\", password: \"\" })\r\n    const handleInputChange = (key: string, value: string) => {\r\n        setForm({ ...form, [key]: value })\r\n    }\r\n    useEffect(() => {\r\n        verifyUser()\r\n    }, [])\r\n    const verifyUser = async () => {\r\n        const token = localStorage.getItem(\"authToken\")\r\n        if (token) {\r\n            context.setToken(token)\r\n            const resp: AxiosResponse<ApiResponse> = await axios.get<ApiResponse>(`${BASE_URL}verify_user?token=${token}`);\r\n            if (resp.data.status) {\r\n                context.setUser(JSON.parse(resp.data.success))\r\n                return navigate(\"/\")\r\n            }\r\n        }\r\n    }\r\n    const onSubmitForm = async () => {\r\n        if (!form.email)\r\n            return enqueueSnackbar(\"Please add valid email address.\", { variant: 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n        if (!form.password)\r\n            return enqueueSnackbar(\"Please add a password.\", { variant: 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n\r\n        const resp: AxiosResponse<ApiResponse> = await axios.post<ApiResponse>(`${BASE_URL}auth/login`, form);\r\n        !resp.data.status && enqueueSnackbar(resp.data.message, { variant: 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n        return resp.data.status && setUser(resp.data.success)\r\n    }\r\n    const setUser = (token: string) => {\r\n        context.setToken(token)\r\n        navigate(\"/\")\r\n    }\r\n    return (\r\n        <Grid container style={{ justifyContent: \"center\" }} spacing={2}>\r\n\r\n            <Grid item md={3} xs={12}>\r\n                <Card className={props.classes.root}>\r\n                    <CardContent className=\"auth-card\">\r\n                        <div className=\"CardTop\">\r\n                            <div className=\"titles\" style={{ justifyContent: \"center\" }}>\r\n                                <Typography gutterBottom variant=\"h5\">\r\n                                    Login\r\n                        </Typography>\r\n                            </div>\r\n                        </div>\r\n                        <form noValidate style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center'\r\n                        }}>\r\n                            <div style={{ margin: \"10px 0px\" }}>\r\n\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item>\r\n                                        <TextField type=\"email\" onChange={(e) => handleInputChange(\"email\", e?.target.value)} label=\"Email Address\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item>\r\n                                        <TextField type=\"password\" onChange={(e) => handleInputChange(\"password\", e?.target.value)} label=\"Password\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Typography gutterBottom variant=\"body1\">\r\n                                        New to this app? <Link to=\"/register\">Register</Link>\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        startIcon={<LockOpenTwoToneIcon />}\r\n                                        onClick={onSubmitForm}\r\n                                    >\r\n                                        Login\r\n                                    </Button>\r\n                                </Grid>\r\n                            </div>\r\n                        </form>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","E:\\work\\react\\expenses\\src\\components\\items\\ItemsList.tsx",["87"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { AddCircleTwoTone } from \"@material-ui/icons\";\r\nimport ItemContext, { ItemCtx } from \"../../context/ItemContext\";\r\nimport { Item as I } from '../../models/Item';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Item from './Item';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { BASE_URL, ApiResponse } from '../../context/ItemProvider';\r\nimport { navigate } from \"@reach/router\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AccountBoxTwoToneIcon from '@material-ui/icons/AccountBoxTwoTone';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\r\nimport MoreVertTwoToneIcon from '@material-ui/icons/MoreVertTwoTone';\r\n\r\ninterface Props {\r\n  classes: any;\r\n}\r\nexport default function ItemsList(props: Props) {\r\n  const context: ItemCtx = useContext(ItemContext)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  useEffect(() => {\r\n    fetchItems()\r\n\r\n  }, [])\r\n  const verifyUser = async () => {\r\n    const token = localStorage.getItem(\"authToken\")\r\n    if (!token)\r\n      return navigate(\"/login\")\r\n    context.setToken(token)\r\n    const resp: AxiosResponse<ApiResponse> = await axios.get<ApiResponse>(`${BASE_URL}verify_user?token=${token}`);\r\n    return resp.data.status ? context.setUser(resp.data.success) : navigate(\"/login\")\r\n  }\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const fetchItems = () => {\r\n    verifyUser().then(resp => {\r\n      context.fetchItems()\r\n      setTimeout(() => {\r\n        setIsLoading(false)\r\n      }, 1000);\r\n    })\r\n  }\r\n  function handleOpen(): void {\r\n    context.toggleDialog();\r\n  }\r\n  const logOut = () => {\r\n    setAnchorEl(null);\r\n    context.setToken(\"\")\r\n    navigate(\"/login\")\r\n  }\r\n  const visitEdit = () => {\r\n    setAnchorEl(null);\r\n    navigate('/edit-profile')\r\n  }\r\n  return (\r\n    <Card className={props.classes.root}>\r\n      <CardContent>\r\n        <div className=\"CardTop\">\r\n          <div className=\"portfolio\">\r\n            <div className=\"title\">\r\n              <Avatar alt={context.user.name} src={context.user.image_url} />\r\n              <Typography gutterBottom variant=\"h5\">\r\n                {context.user.name}\r\n                <span>\r\n                  {context.user.email}\r\n                </span>\r\n\r\n              </Typography>\r\n            </div>\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <MoreVertTwoToneIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={visitEdit}><AccountBoxTwoToneIcon /> Edit Profile</MenuItem>\r\n                <MenuItem onClick={logOut}><ExitToAppTwoToneIcon /> Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"titles\">\r\n            <Typography gutterBottom variant=\"h6\">\r\n              Expenses List\r\n          </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddCircleTwoTone />}\r\n              color=\"primary\"\r\n              onClick={handleOpen}\r\n            >\r\n              Add\r\n          </Button>\r\n          </div>\r\n        </div>\r\n        <List className={props.classes.list}>\r\n          {\r\n            isLoading ? <CircularProgress /> :\r\n              !context.items.length ? <Typography gutterBottom variant=\"h6\"> No items in the list.  </Typography> :\r\n                context.items.map((item: I, i: number) => <Item key={item._id} index={i} item={item} />)\r\n          }\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","E:\\work\\react\\expenses\\src\\components\\items\\AddItemDialog.tsx",["88"],"import React, { useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ItemContext, { ItemCtx } from '../../context/ItemContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { AddCircleTwoTone } from '@material-ui/icons';\r\nimport SaveTwoToneIcon from '@material-ui/icons/SaveTwoTone';\r\nimport { Item } from '../../models/Item';\r\nimport { useSnackbar } from 'notistack';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\ninterface Props {\r\n    classes: any\r\n}\r\nexport default function AddItemDialog(props: Props) {\r\n    const context: ItemCtx = useContext(ItemContext)\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    const onSubmitForm = () => {\r\n        if (!context.currentItem.title)\r\n            return enqueueSnackbar(\"Please add item title.\", { variant: 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n        if (!+context.currentItem.amount)\r\n            return enqueueSnackbar(\"Please add valid amount.\", { variant: 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n        var item: Item\r\n        if (context.currentIndex === -1)\r\n            item = new Item((Math.random() * 1000).toString(), context.user._id, context.currentItem.title, context.currentItem.amount, context.currentItem.date.toString())\r\n        else\r\n            item = new Item(context.currentItem._id, context.currentItem.user, context.currentItem.title, context.currentItem.amount, context.currentItem.date.toString())\r\n        console.log(item);\r\n        \r\n        context.addItem(item).then((resp: any) => {\r\n            enqueueSnackbar(resp.message, { variant: !resp.status ? 'error' : 'success', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n            resp.status && context.fetchChartData()\r\n        })\r\n    }\r\n    return (\r\n        <Dialog\r\n            fullWidth={true}\r\n            maxWidth=\"xs\"\r\n            open={context.dialogOpen}\r\n            onClose={context.toggleDialog}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"max-width-dialog-title\" style={{ textAlign: \"center\" }}>  {context.currentIndex === -1 ? 'Add' : 'Update'} Item</DialogTitle>\r\n            <DialogContent>\r\n                <form noValidate style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center'\r\n                }}>\r\n                    <div style={{ margin: \"10px 0px\" }}>\r\n                        <Grid container style={{ justifyContent: \"center\" }} spacing={1} alignItems=\"flex-end\">\r\n\r\n                            <Grid item>\r\n                                <TextField value={context.currentItem.title} onChange={(e) => context.handleInputChange(\"title\", e?.target.value)} label=\"Title\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                    <div style={{ margin: \"10px 0px\" }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor=\"standard-adornment-amount\">Amount</InputLabel>\r\n                            <Input\r\n                                id=\"standard-adornment-amount\"\r\n                                onInput={(e: any) => {\r\n                                    if (e.target.value)\r\n                                        e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 2)\r\n                                }}\r\n                                type=\"number\"\r\n                                value={context.currentItem.amount}\r\n                                onChange={(e) => context.handleInputChange(\"amount\", e?.target.value)}\r\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n                            />\r\n                        </FormControl>\r\n                        {/* <Grid container style={{ justifyContent: \"center\" }} spacing={1} alignItems=\"flex-end\">\r\n\r\n                            <Grid item>\r\n                                <TextField type=\"number\" value={context.currentItem.amount} onChange={(e) => context.handleInputChange(\"amount\", e?.target.value)} label=\"Amount\" />\r\n                            </Grid>\r\n                        </Grid> */}\r\n                    </div>\r\n\r\n                    <div style={{ margin: \"10px 0px\" }}>\r\n                        <Grid container style={{ justifyContent: \"center\" }} spacing={1} alignItems=\"flex-end\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                                <KeyboardDatePicker\r\n                                    margin=\"normal\"\r\n                                    InputProps={{ readOnly: true }}\r\n                                    id=\"date-picker-dialog\"\r\n                                    label=\"Select Date\"\r\n                                    format=\"MMM dd, yyyy\"\r\n                                    value={context.currentItem.date}\r\n                                    onChange={(value) => context.handleInputChange(\"date\", value)}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n\r\n                        </Grid>\r\n                    </div>\r\n                    <div>\r\n\r\n                    </div>\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={context.toggleDialog} color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    startIcon={context.currentIndex === -1 ? <AddCircleTwoTone /> : <SaveTwoToneIcon />}\r\n                    color=\"primary\"\r\n                    onClick={onSubmitForm}\r\n                >\r\n                    {context.currentIndex === -1 ? 'Add' : 'Update'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n    )\r\n}\r\n","E:\\work\\react\\expenses\\src\\models\\User.tsx",[],"E:\\work\\react\\expenses\\src\\components\\items\\Item.tsx",["89"],"import React, { useContext } from 'react'\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Item as I } from '../../models/Item';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ItemContext, { ItemCtx } from \"../../context/ItemContext\";\r\nimport { useSnackbar } from 'notistack';\r\nimport { ApiResponse } from '../../context/ItemProvider';\r\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\r\nimport DeleteTwoToneIcon from '@material-ui/icons/DeleteTwoTone';\r\nimport moment from 'moment';\r\n\r\ninterface Props {\r\n    item: I\r\n    index: number\r\n}\r\nexport default function Item(props: Props) {\r\n    const context: ItemCtx = useContext(ItemContext)\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const deleteItem = () => {\r\n        context.deleteItem(props.index).then((resp: ApiResponse) => {\r\n            enqueueSnackbar(resp.message, { variant: resp.status ? 'success' : 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n            resp.status && context.fetchChartData()\r\n\r\n        })\r\n    }\r\n    return (\r\n        <ListItem>\r\n            <ListItemAvatar>\r\n                <Avatar>\r\n                    {/* <ImageIcon /> */}\r\n                    <Typography gutterBottom variant=\"h5\">\r\n                        ${props.item.amount}\r\n                    </Typography>\r\n                </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={props.item.title} secondary={moment(props.item.date).format(\"MMM DD, YYYY\")} />\r\n            <ListItemSecondaryAction>\r\n                <IconButton onClick={() => context.setItem(props.item, props.index)} edge=\"end\" aria-label=\"delete\">\r\n                    <EditTwoToneIcon />\r\n                </IconButton>\r\n                <IconButton onClick={deleteItem} edge=\"end\" aria-label=\"delete\">\r\n                    <DeleteTwoToneIcon />\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n","E:\\work\\react\\expenses\\src\\models\\Chart.tsx",[],"E:\\work\\react\\expenses\\src\\components\\items\\ItemsChart.tsx",["90"],"import React, { useContext, useEffect } from 'react'\r\nimport ItemContext, { ItemCtx } from '../../context/ItemContext'\r\nimport Chart from 'react-apexcharts'\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\ninterface Props {\r\n    classes: any\r\n}\r\nexport default function ItemsChart(props: Props) {\r\n    const context: ItemCtx = useContext(ItemContext)\r\n    var series = [{\r\n        name: \"Expense($)\",\r\n        data: context.chartData.prices\r\n    }]\r\n    var options = {\r\n        chart: {\r\n            type: 'area',\r\n            height: 350,\r\n            zoom: {\r\n                enabled: false\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        stroke: {\r\n            curve: 'smooth',\r\n        },\r\n\r\n        title: {\r\n            text: `${context.user.name}'s Expenses Chart`,\r\n            align: 'left'\r\n        },\r\n        labels: context.chartData.dates,\r\n        xaxis: {\r\n            type: 'datetime',\r\n        },\r\n        yaxis: {\r\n            opposite: true\r\n        },\r\n        legend: {\r\n            horizontalAlign: 'left'\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        context.fetchChartData()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Card className={props.classes.root}>\r\n            <CardContent>\r\n                <Chart options={options} series={series} type=\"area\" height={350} />\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n","E:\\work\\react\\expenses\\src\\components\\profile\\EditProfile.tsx",["91","92"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { navigate } from \"@reach/router\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { BASE_URL, ApiResponse } from '../../context/ItemProvider';\r\nimport { useSnackbar } from 'notistack';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport AssignmentTurnedInTwoToneIcon from '@material-ui/icons/AssignmentTurnedInTwoTone';\r\nimport ItemContext, { ItemCtx } from \"../../context/ItemContext\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport BackspaceTwoToneIcon from '@material-ui/icons/BackspaceTwoTone';\r\nimport { User } from '../../models/User'\r\n\r\ninterface Props {\r\n    path: string\r\n    classes: any\r\n}\r\nexport default function EditProfile(props: Props) {\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    const context: ItemCtx = useContext(ItemContext)\r\n\r\n    const [form, setForm] = useState<User>(context.user)\r\n    const handleInputChange = (key: string, value: string) => {\r\n        setForm({ ...form, [key]: value })\r\n    }\r\n    useEffect(() => {\r\n        verifyUser()\r\n    }, [])\r\n    const verifyUser = async () => {\r\n        const token = localStorage.getItem(\"authToken\")\r\n        if (!token)\r\n            return navigate(\"/login\")\r\n        context.setToken(token)\r\n        const resp: AxiosResponse<ApiResponse> = await axios.get<ApiResponse>(`${BASE_URL}verify_user?token=${token}`);\r\n        if (resp.data.status) {\r\n            setForm(JSON.parse(resp.data.success))\r\n            context.setUser(JSON.parse(resp.data.success))\r\n        } else\r\n            navigate(\"/login\")\r\n    }\r\n    const onSubmitForm = async () => {\r\n        if (!form.name)\r\n            return enqueueSnackbar(\"Please add a name.\", { variant: 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n        if (!form.email)\r\n            return enqueueSnackbar(\"Please add valid email address.\", { variant: 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n        if (!form.password)\r\n            return enqueueSnackbar(\"Please add a password.\", { variant: 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n        // if (!form.image_url)\r\n        // return enqueueSnackbar(\"Please add valid image url.\", { variant: 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n        const id = form._id; \r\n        delete form._id;\r\n        const resp: AxiosResponse<ApiResponse> = await axios.put<ApiResponse>(`${BASE_URL}update_profile?token=${context.token}`, form);\r\n        enqueueSnackbar(resp.data.message, { variant: resp.data.status ? 'success' : 'error', anchorOrigin: { vertical: 'bottom', horizontal: 'center', }, });\r\n        resp.data.status && context.setUser({ ...form, _id:id})\r\n    }\r\n    return (\r\n        <Grid container style={{ justifyContent: \"center\" }} spacing={2}>\r\n\r\n            <Grid item md={6} xs={12}>\r\n                <Card className={props.classes.root}>\r\n                    <CardContent>\r\n                        <div className=\"CardTop\">\r\n                            <div className=\"portfolio\">\r\n                                <div className=\"title\">\r\n                                    <Avatar alt={context.user.name} src={context.user.image_url} />\r\n                                    <Typography gutterBottom variant=\"h5\">\r\n                                        {context.user.name}\r\n                                        <span>\r\n                                            {context.user.email}\r\n                                        </span>\r\n\r\n                                    </Typography>\r\n                                </div>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    startIcon={<BackspaceTwoToneIcon />}\r\n                                    color=\"primary\"\r\n                                    onClick={() => navigate(\"/\")}\r\n                                >\r\n                                    Back\r\n                                </Button>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <form noValidate style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center'\r\n                        }}>\r\n                            <div style={{ margin: \"10px 0px\" }}>\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item>\r\n                                        <TextField value={form.name} onChange={(e) => handleInputChange(\"name\", e?.target.value)} label=\"Name\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item>\r\n                                        <TextField value={form.email} type=\"email\" onChange={(e) => handleInputChange(\"email\", e?.target.value)} label=\"Email Address\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item>\r\n                                        <TextField value={form.password} type=\"password\" onChange={(e) => handleInputChange(\"password\", e?.target.value)} label=\"Password\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Grid item>\r\n                                        <TextField value={form.image_url} onChange={(e) => handleInputChange(\"image_url\", e?.target.value)} label=\"Profile Image Url\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container style={{ justifyContent: \"center\", margin: \"10px 0px\" }} spacing={1} alignItems=\"flex-end\">\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        startIcon={<AssignmentTurnedInTwoToneIcon />}\r\n                                        onClick={onSubmitForm}\r\n                                    >\r\n                                        Update Profile\r\n                        </Button>\r\n                                </Grid>\r\n                            </div>\r\n                        </form>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":15},{"ruleId":"101","severity":1,"message":"102","line":29,"column":8,"nodeType":"103","endLine":29,"endColumn":10,"suggestions":"104"},{"ruleId":"97","severity":1,"message":"105","line":26,"column":30,"nodeType":"99","messageId":"100","endLine":26,"endColumn":43},{"ruleId":"101","severity":1,"message":"106","line":35,"column":8,"nodeType":"103","endLine":35,"endColumn":10,"suggestions":"107"},{"ruleId":"97","severity":1,"message":"105","line":26,"column":30,"nodeType":"99","messageId":"100","endLine":26,"endColumn":43},{"ruleId":"101","severity":1,"message":"106","line":33,"column":8,"nodeType":"103","endLine":33,"endColumn":10,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"109","line":38,"column":6,"nodeType":"103","endLine":38,"endColumn":8,"suggestions":"110"},{"ruleId":"97","severity":1,"message":"105","line":26,"column":30,"nodeType":"99","messageId":"100","endLine":26,"endColumn":43},{"ruleId":"97","severity":1,"message":"105","line":23,"column":30,"nodeType":"99","messageId":"100","endLine":23,"endColumn":43},{"ruleId":"101","severity":1,"message":"111","line":47,"column":8,"nodeType":"103","endLine":47,"endColumn":10,"suggestions":"112"},{"ruleId":"97","severity":1,"message":"105","line":23,"column":30,"nodeType":"99","messageId":"100","endLine":23,"endColumn":43},{"ruleId":"101","severity":1,"message":"106","line":32,"column":8,"nodeType":"103","endLine":32,"endColumn":10,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"@typescript-eslint/no-unused-vars","'Chart' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkTheme'. Either include it or remove the dependency array.","ArrayExpression",["116"],"'closeSnackbar' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'verifyUser'. Either include it or remove the dependency array.",["117"],["118"],"React Hook useEffect has a missing dependency: 'fetchItems'. Either include it or remove the dependency array.",["119"],"React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.",["120"],["121"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"124","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"124","fix":"131"},"Update the dependencies array to be: [checkTheme]",{"range":"132","text":"133"},"Update the dependencies array to be: [verifyUser]",{"range":"134","text":"135"},{"range":"136","text":"135"},"Update the dependencies array to be: [fetchItems]",{"range":"137","text":"138"},"Update the dependencies array to be: [context]",{"range":"139","text":"140"},{"range":"141","text":"135"},[1284,1286],"[checkTheme]",[1347,1349],"[verifyUser]",[1252,1254],[1571,1573],"[fetchItems]",[1218,1220],"[context]",[1348,1350]]